Definition
    { definitionAttributes = Attributes []
    , definitionModules =
        Module
            { moduleName = (ModuleName "NAT")
            , moduleSentences =
                [ (SentenceSortSentence SentenceSort
                    { sentenceSortName = (Id Object "Nat")
                    , sentenceSortParameters = []
                    , sentenceSortAttributes = Attributes []
                    })
                , (ObjectSentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = (Id Object "zero")
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts = []
                    , sentenceSymbolReturnSort =
                        (SortActualSortSortActual
                                { sortActualName = (Id Object "Nat")
                                , sortActualSorts = []
                                })
                    , sentenceSymbolAttributes = Attributes []
                    })
                , (ObjectSentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = (Id Object "succ")
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ (SortActualSortSortActual
                                { sortActualName = (Id Object "Nat")
                                , sortActualSorts = []
                                })
                        ]
                    , sentenceSymbolReturnSort =
                        (SortActualSortSortActual
                                { sortActualName = (Id Object "Nat")
                                , sortActualSorts = []
                                })
                    , sentenceSymbolAttributes = Attributes []
                    })
                , (ObjectSentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = (Id Object "plus")
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ (SortActualSortSortActual
                                { sortActualName = (Id Object "Nat")
                                , sortActualSorts = []
                                })
                        , (SortActualSortSortActual
                                { sortActualName = (Id Object "Nat")
                                , sortActualSorts = []
                                })
                        ]
                    , sentenceSymbolReturnSort =
                        (SortActualSortSortActual
                                { sortActualName = (Id Object "Nat")
                                , sortActualSorts = []
                                })
                    , sentenceSymbolAttributes = Attributes []
                    })
                , (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ (ObjectSortVariable (SortVariable (Id Object "S")))
                        ]
                    , sentenceAxiomPattern =
                        (ObjectPattern (ExistsPattern Exists
                            { existsSort =
                                (SortVariableSort (SortVariable (Id Object "S")))
                            , existsVariable =
                                (ObjectVariable Variable
                                    { variableName = (Id Object "T")
                                    , variableSort =
                                        (SortActualSortSortActual
                                                { sortActualName = (Id Object "Nat")
                                                , sortActualSorts = []
                                                })
                                    })
                            , existsPattern =
                                (ObjectPattern (EqualsPattern Equals
                                    { equalsOperandSort =
                                        (SortActualSortSortActual
                                                { sortActualName = (Id Object "Nat")
                                                , sortActualSorts = []
                                                })
                                    , equalsResultSort =
                                        (SortVariableSort (SortVariable (Id Object "S")))
                                    , equalsFirst =
                                        (ObjectPattern (VariablePattern Variable
                                            { variableName = (Id Object "T")
                                            , variableSort =
                                                (SortActualSortSortActual
                                                        { sortActualName = (Id Object "Nat")
                                                        , sortActualSorts = []
                                                        })
                                            }))
                                    , equalsSecond =
                                        (ObjectPattern (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id Object "zero")
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationPatterns = []
                                            }))
                                    }))
                            }))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ (ObjectSortVariable (SortVariable (Id Object "S")))
                        ]
                    , sentenceAxiomPattern =
                        (ObjectPattern (ExistsPattern Exists
                            { existsSort =
                                (SortVariableSort (SortVariable (Id Object "S")))
                            , existsVariable =
                                (ObjectVariable Variable
                                    { variableName = (Id Object "T")
                                    , variableSort =
                                        (SortActualSortSortActual
                                                { sortActualName = (Id Object "Nat")
                                                , sortActualSorts = []
                                                })
                                    })
                            , existsPattern =
                                (ObjectPattern (EqualsPattern Equals
                                    { equalsOperandSort =
                                        (SortActualSortSortActual
                                                { sortActualName = (Id Object "Nat")
                                                , sortActualSorts = []
                                                })
                                    , equalsResultSort =
                                        (SortVariableSort (SortVariable (Id Object "S")))
                                    , equalsFirst =
                                        (ObjectPattern (VariablePattern Variable
                                            { variableName = (Id Object "T")
                                            , variableSort =
                                                (SortActualSortSortActual
                                                        { sortActualName = (Id Object "Nat")
                                                        , sortActualSorts = []
                                                        })
                                            }))
                                    , equalsSecond =
                                        (ObjectPattern (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id Object "succ")
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationPatterns =
                                                [ (ObjectPattern (VariablePattern Variable
                                                    { variableName = (Id Object "X")
                                                    , variableSort =
                                                        (SortActualSortSortActual
                                                                { sortActualName = (Id Object "Nat")
                                                                , sortActualSorts = []
                                                                })
                                                    }))
                                                ]
                                            }))
                                    }))
                            }))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ (ObjectSortVariable (SortVariable (Id Object "S")))
                        ]
                    , sentenceAxiomPattern =
                        (ObjectPattern (ExistsPattern Exists
                            { existsSort =
                                (SortVariableSort (SortVariable (Id Object "S")))
                            , existsVariable =
                                (ObjectVariable Variable
                                    { variableName = (Id Object "T")
                                    , variableSort =
                                        (SortActualSortSortActual
                                                { sortActualName = (Id Object "Nat")
                                                , sortActualSorts = []
                                                })
                                    })
                            , existsPattern =
                                (ObjectPattern (EqualsPattern Equals
                                    { equalsOperandSort =
                                        (SortActualSortSortActual
                                                { sortActualName = (Id Object "Nat")
                                                , sortActualSorts = []
                                                })
                                    , equalsResultSort =
                                        (SortVariableSort (SortVariable (Id Object "S")))
                                    , equalsFirst =
                                        (ObjectPattern (VariablePattern Variable
                                            { variableName = (Id Object "T")
                                            , variableSort =
                                                (SortActualSortSortActual
                                                        { sortActualName = (Id Object "Nat")
                                                        , sortActualSorts = []
                                                        })
                                            }))
                                    , equalsSecond =
                                        (ObjectPattern (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id Object "plus")
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationPatterns =
                                                [ (ObjectPattern (VariablePattern Variable
                                                    { variableName = (Id Object "X")
                                                    , variableSort =
                                                        (SortActualSortSortActual
                                                                { sortActualName = (Id Object "Nat")
                                                                , sortActualSorts = []
                                                                })
                                                    }))
                                                , (ObjectPattern (VariablePattern Variable
                                                    { variableName = (Id Object "Y")
                                                    , variableSort =
                                                        (SortActualSortSortActual
                                                                { sortActualName = (Id Object "Nat")
                                                                , sortActualSorts = []
                                                                })
                                                    }))
                                                ]
                                            }))
                                    }))
                            }))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters = []
                    , sentenceAxiomPattern =
                        (ObjectPattern (OrPattern Or
                            { orSort =
                                (SortActualSortSortActual
                                        { sortActualName = (Id Object "Nat")
                                        , sortActualSorts = []
                                        })
                            , orFirst =
                                (ObjectPattern (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = (Id Object "zero")
                                            , symbolOrAliasParams = []
                                            }
                                    , applicationPatterns = []
                                    }))
                            , orSecond =
                                (ObjectPattern (ExistsPattern Exists
                                    { existsSort =
                                        (SortActualSortSortActual
                                                { sortActualName = (Id Object "Nat")
                                                , sortActualSorts = []
                                                })
                                    , existsVariable =
                                        (ObjectVariable Variable
                                            { variableName = (Id Object "X")
                                            , variableSort =
                                                (SortActualSortSortActual
                                                        { sortActualName = (Id Object "Nat")
                                                        , sortActualSorts = []
                                                        })
                                            })
                                    , existsPattern =
                                        (ObjectPattern (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id Object "succ")
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationPatterns =
                                                [ (ObjectPattern (VariablePattern Variable
                                                    { variableName = (Id Object "X")
                                                    , variableSort =
                                                        (SortActualSortSortActual
                                                                { sortActualName = (Id Object "Nat")
                                                                , sortActualSorts = []
                                                                })
                                                    }))
                                                ]
                                            }))
                                    }))
                            }))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters = []
                    , sentenceAxiomPattern =
                        (ObjectPattern (NotPattern Not
                            { notSort =
                                (SortActualSortSortActual
                                        { sortActualName = (Id Object "Nat")
                                        , sortActualSorts = []
                                        })
                            , notPattern =
                                (ObjectPattern (AndPattern And
                                    { andSort =
                                        (SortActualSortSortActual
                                                { sortActualName = (Id Object "Nat")
                                                , sortActualSorts = []
                                                })
                                    , andFirst =
                                        (ObjectPattern (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id Object "zero")
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationPatterns = []
                                            }))
                                    , andSecond =
                                        (ObjectPattern (ExistsPattern Exists
                                            { existsSort =
                                                (SortActualSortSortActual
                                                        { sortActualName = (Id Object "Nat")
                                                        , sortActualSorts = []
                                                        })
                                            , existsVariable =
                                                (ObjectVariable Variable
                                                    { variableName = (Id Object "X")
                                                    , variableSort =
                                                        (SortActualSortSortActual
                                                                { sortActualName = (Id Object "Nat")
                                                                , sortActualSorts = []
                                                                })
                                                    })
                                            , existsPattern =
                                                (ObjectPattern (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = (Id Object "succ")
                                                            , symbolOrAliasParams = []
                                                            }
                                                    , applicationPatterns =
                                                        [ (ObjectPattern (VariablePattern Variable
                                                            { variableName = (Id Object "X")
                                                            , variableSort =
                                                                (SortActualSortSortActual
                                                                        { sortActualName = (Id Object "Nat")
                                                                        , sortActualSorts = []
                                                                        })
                                                            }))
                                                        ]
                                                    }))
                                            }))
                                    }))
                            }))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ (ObjectSortVariable (SortVariable (Id Object "S")))
                        ]
                    , sentenceAxiomPattern =
                        (ObjectPattern (EqualsPattern Equals
                            { equalsOperandSort =
                                (SortActualSortSortActual
                                        { sortActualName = (Id Object "Nat")
                                        , sortActualSorts = []
                                        })
                            , equalsResultSort =
                                (SortVariableSort (SortVariable (Id Object "S")))
                            , equalsFirst =
                                (ObjectPattern (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = (Id Object "plus")
                                            , symbolOrAliasParams = []
                                            }
                                    , applicationPatterns =
                                        [ (ObjectPattern (VariablePattern Variable
                                            { variableName = (Id Object "X")
                                            , variableSort =
                                                (SortActualSortSortActual
                                                        { sortActualName = (Id Object "Nat")
                                                        , sortActualSorts = []
                                                        })
                                            }))
                                        , (ObjectPattern (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id Object "zero")
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationPatterns = []
                                            }))
                                        ]
                                    }))
                            , equalsSecond =
                                (ObjectPattern (VariablePattern Variable
                                    { variableName = (Id Object "X")
                                    , variableSort =
                                        (SortActualSortSortActual
                                                { sortActualName = (Id Object "Nat")
                                                , sortActualSorts = []
                                                })
                                    }))
                            }))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ (ObjectSortVariable (SortVariable (Id Object "S")))
                        ]
                    , sentenceAxiomPattern =
                        (ObjectPattern (EqualsPattern Equals
                            { equalsOperandSort =
                                (SortActualSortSortActual
                                        { sortActualName = (Id Object "Nat")
                                        , sortActualSorts = []
                                        })
                            , equalsResultSort =
                                (SortVariableSort (SortVariable (Id Object "S")))
                            , equalsFirst =
                                (ObjectPattern (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = (Id Object "plus")
                                            , symbolOrAliasParams = []
                                            }
                                    , applicationPatterns =
                                        [ (ObjectPattern (VariablePattern Variable
                                            { variableName = (Id Object "X")
                                            , variableSort =
                                                (SortActualSortSortActual
                                                        { sortActualName = (Id Object "Nat")
                                                        , sortActualSorts = []
                                                        })
                                            }))
                                        , (ObjectPattern (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id Object "succ")
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationPatterns =
                                                [ (ObjectPattern (VariablePattern Variable
                                                    { variableName = (Id Object "Y")
                                                    , variableSort =
                                                        (SortActualSortSortActual
                                                                { sortActualName = (Id Object "Nat")
                                                                , sortActualSorts = []
                                                                })
                                                    }))
                                                ]
                                            }))
                                        ]
                                    }))
                            , equalsSecond =
                                (ObjectPattern (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = (Id Object "succ")
                                            , symbolOrAliasParams = []
                                            }
                                    , applicationPatterns =
                                        [ (ObjectPattern (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id Object "plus")
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationPatterns =
                                                [ (ObjectPattern (VariablePattern Variable
                                                    { variableName = (Id Object "X")
                                                    , variableSort =
                                                        (SortActualSortSortActual
                                                                { sortActualName = (Id Object "Nat")
                                                                , sortActualSorts = []
                                                                })
                                                    }))
                                                , (ObjectPattern (VariablePattern Variable
                                                    { variableName = (Id Object "Y")
                                                    , variableSort =
                                                        (SortActualSortSortActual
                                                                { sortActualName = (Id Object "Nat")
                                                                , sortActualSorts = []
                                                                })
                                                    }))
                                                ]
                                            }))
                                        ]
                                    }))
                            }))
                    , sentenceAxiomAttributes = Attributes []
                    })
                ]
            , moduleAttributes = Attributes []
            }
    }