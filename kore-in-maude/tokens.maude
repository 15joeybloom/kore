---- Terminals / Tokens of the Kore syntax / grammar are defined
---- as Maude constants, simply because Maude does not allows us
---- to define them as regular expressions. 


fmod TOKENS is

  including KORE .

  ---- Terminals of SortVariable
  ops S S' S1 S2 S3 R : -> SortVariable   .

  ---- Terminals of Sort (object-level ones)
  ops Nat Bool            : -> AtomicSort     .
  ops AExp BExp           : -> AtomicSort     .
  op  Stmt                : -> AtomicSort     .
  ops List Ctxt           : -> ParametricSort .

  ---- Terminals of Sort (meta-level ones)
  op  KString             : -> AtomicSort     . 
  op  KSort               : -> AtomicSort     . 
  op  KSortList           : -> AtomicSort     . 
  op  KSymbol             : -> AtomicSort     . 
  op  KSymbolList         : -> AtomicSort     .  
  op  KVariable           : -> AtomicSort     .  
  op  KPattern            : -> AtomicSort     .  
  op  KPatternList        : -> AtomicSort     .   
  op  KAxiom              : -> AtomicSort     .
  op  KAxiomList          : -> AtomicSort     .
  op  KSortSentence       : -> AtomicSort     . 
  op  KSortSentenceList   : -> AtomicSort     . 
  op  KSymbolSentence     : -> AtomicSort     . 
  op  KSymbolSentenceList : -> AtomicSort     .  
  op  KAxiomSentence      : -> AtomicSort     . 
  op  KAxiomSentenceList  : -> AtomicSort     .  
  op  KModule             : -> AtomicSort     .  
  op  KModuleList         : -> AtomicSort     .  

  ---- Symbol terminals
  op  ceil            : -> Symbol .
  ops true false      : -> Symbol .
  ops andBool notBool : -> Symbol . 
  ops zero            : -> Symbol .
  ops succ plus gte   : -> Symbol .
  op  nil             : -> Symbol .
  op  cons            : -> Symbol .
  op  ctxtapp         : -> Symbol .
  op  gamma0          : -> Symbol .
  op  NatToAExp       : -> Symbol .
  op  IdToAExp        : -> Symbol .
  op  plusAExp        : -> Symbol .
  op  ite             : -> Symbol .

  ---- Symbol terminals in K
  op  Ksort             : -> Symbol .
  op  KnilKSortList     : -> Symbol .
  op  KconsKSortList    : -> Symbol .

  op  Ksymbolid         : -> Symbol .
  op  Ksymbol           : -> Symbol .

  op  Kvariable         : -> Symbol .
  op  Kapplication      : -> Symbol .
  op  Kand              : -> Symbol .
  op  Knot              : -> Symbol .
  op  Kexists           : -> Symbol .

  op  KnilKPatternList  : -> Symbol .
  op  KconsKPatternList : -> Symbol .

  op  Kor               : -> Symbol .
  op  Kimplies          : -> Symbol .
  op  Kequals           : -> Symbol .

  op  Kaxiom            : -> Symbol .
  op  KnilKAxiomList    : -> Symbol . 
  op  KconsKAxiomList   : -> Symbol . 

  op  Kpi0              : -> Symbol    .
  op  Kpi               : -> Alias     .

  op  KgetSort          : -> Symbol .

  op  Kceil             : -> Symbol  .       
  op  Ktrue             : -> Symbol  .    
  op  Kfalse            : -> Symbol  .  
  op  KandBool          : -> Symbol  .      
  op  KnotBool          : -> Symbol  .   
  op  Kzero             : -> Symbol  .       
  op  Ksucc             : -> Symbol  .     
  op  Kplus             : -> Symbol  .    
  op  Kgte              : -> Symbol  .    
  op  Knil              : -> Symbol  .       
  op  Kcons             : -> Symbol  .       
  op  Kctxtapp          : -> Symbol  .       
  op  Kgamma0           : -> Symbol  .       
  op  KNatToAExp        : -> Symbol  .       
  op  KIdToAExp         : -> Symbol  .       
  op  KplusAExp         : -> Symbol  .       
  op  Kite              : -> Symbol  .       

  ---- Alias terminals
  ops \or \implies    : -> Alias     .
  ops \iff \equals    : -> Alias     .
  ops \forall         : -> Alias     .
  op  floor           : -> Alias     .
  op  gamma           : -> Alias     .

  ---- VariableName terminals
  ops B E             : -> VariableName         .
  ops S S' S1 S2 S3   : -> VariableName         . 
  ops X Y Z L L0      : -> VariableName         .
  ops C C1 C2 C' C''  : -> VariableName         .
  ops P Q R           : -> VariableName         .
  ops HOLE            : -> VariableName         .

  ---- ModuleName terminals
  op  PL-SYNTACTIC-SUGAR : -> ModuleName        .
  op  DEFINEDNESS        : -> ModuleName        .
  op  BOOL               : -> ModuleName        .
  op  PRESBURGER         : -> ModuleName        .
  op  LIST               : -> ModuleName        .
  op  CONTEXT            : -> ModuleName        .
  op  AEXP               : -> ModuleName        .
  op  ID                 : -> ModuleName        .
  op  TEST               : -> ModuleName        .
  op  K                  : -> ModuleName        .

  ---(
  ---- Reflexive: Sort as Pattern

  ops Nat Bool        : -> AtomicSort-As-Pattern           .
  ops AExp BExp       : -> AtomicSort-As-Pattern           .
  op  Stmt            : -> AtomicSort-As-Pattern           .
  ops List Map Ctxt   : -> ParametricSort-As-Pattern              .
  ops S S' S1 S2 S3 R : -> SortVariable-As-Pattern              .

  op  KPattern        : -> AtomicSort-As-Pattern           .
  op  KSort           : -> AtomicSort-As-Pattern           .
  ---)

  ---- Some frontend sugar that allows us
  ---- to use x:s instead of x : s in 
  ---- Kore definition. 
  op  X:S1            : -> Variable             .
  eq  X:S1            =    X : S1               .
  op  X:S2            : -> Variable             .
  eq  X:S2            =    X : S2               .
  op  X:S             : -> Variable             .
  eq  X:S             =    X : S                .
  op  X:Nat           : -> Variable             .
  eq  X:Nat           =    X : S1               .
  op  Y:Nat           : -> Variable             .
  eq  Y:Nat           =    Y : S1               .
  op  Z:Nat           : -> Variable             .
  eq  Z:Nat           =    Z : S1               .
  op  L:List{S}       : -> Variable             .
  eq  L:List{S}       =    L : List{S}          .
  op  L0:List{S}      : -> Variable             .
  eq  L0:List{S}      =    L0 : List{S}         .
  op  B:Bool          : -> Variable             .
  eq  B:Bool          =    B : Bool             .
  op  C:Bool          : -> Variable             .
  eq  C:Bool          =    C : Bool             .
  op  C1:Bool         : -> Variable             .
  eq  C1:Bool         =    C1 : Bool            .
  op  C2:Bool         : -> Variable             .
  eq  C2:Bool         =    C2 : Bool            .
  op  E:AExp          : -> Variable             .
  eq  E:AExp          =    E : AExp             .
  op  S1:Stmt         : -> Variable             .
  eq  S1:Stmt         =    S1 : Stmt            .
  op  S2:Stmt         : -> Variable             .
  eq  S2:Stmt         =    S2 : Stmt            .

  op  P:KPattern      : -> Variable             .
  eq  P:KPattern      =    P : KPattern         .
  op  Q:KPattern      : -> Variable             .
  eq  Q:KPattern      =    Q : KPattern         .
  op  C:KPattern      : -> Variable             .
  eq  C:KPattern      =    C : KPattern         .
  op  HOLE:S1         : -> Variable             .
  eq  HOLE:S1         =    HOLE : S1            .
  op  HOLE:S          : -> Variable             .
  eq  HOLE:S          =    HOLE : S             .


endfm
